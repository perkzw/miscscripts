-- Aimbot Module Code (add this to the aimbot script if missing)
getgenv().AimbotModule = AimbotModule or {}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Aimbot state
AimbotModule.isAimbotActive = false
AimbotModule.maxDistance = 500
local lockedPlayer = nil

-- Function to toggle the aimbot
function AimbotModule.toggleAimbot()
    AimbotModule.isAimbotActive = not AimbotModule.isAimbotActive
    if not AimbotModule.isAimbotActive then
        lockedPlayer = nil
    end
    print("Aimbot " .. (AimbotModule.isAimbotActive and "enabled" or "disabled"))
end

-- Function to unload the aimbot
function AimbotModule.unload()
    AimbotModule.isAimbotActive = false
    lockedPlayer = nil
    print("Aimbot unloaded.")
end

-- Function to set the max distance
function AimbotModule.setMaxDistance(distance)
    AimbotModule.maxDistance = distance
    print("Max distance set to:", distance)
end

-- Aimbot logic (runs every frame)
RunService.RenderStepped:Connect(function()
    if AimbotModule.isAimbotActive then
        -- Find and lock onto the closest player
        local closestPlayer = nil
        local closestDistance = AimbotModule.maxDistance

        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestPlayer = player
                    closestDistance = distance
                end
            end
        end

        -- Lock onto the closest player
        if closestPlayer then
            lockedPlayer = closestPlayer
            local targetPos = closestPlayer.Character.HumanoidRootPart.Position
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPos)
        end
    end
end)
